# Code Quality workflow for black, flake8, mypy

name: Build Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the master and develop branches
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches: 
      - develop
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
    strategy:
      matrix:
        python-version:  ["3.7", "3.8", "3.9", "3.10"]
      # Complete all versions in matrix even if one fails.
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
    
    - name: Setup Python ${{ matrix.python-version}}
      uses: actions/setup-python@v3
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: ${{ matrix.python-version}}
        architecture: x64

    # Cache pip dependencies
    # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install PorePy
      run: |
        sudo apt-get update
        sudo apt-get install libglu1-mesa
        sudo apt-get install libgeos-dev
        export LD_LIBRARY_PATH=/usr/local/lib64/:$LD_LIBRARY_PATH
        pip install -U pip
        pip install -r requirements-dev.txt
        pip install .
        pip freeze
        wget https://raw.githubusercontent.com/keileg/polyhedron/master/polyhedron.py
        mv polyhedron.py robust_point_in_polyhedron.py

    - name: black
      if: ${{ always() }}
      run: black --check src

    - name: isort
      if: ${{always()}}
      run: isort --check src

    - name: flake8
      if: ${{ always() }}
      run: flake8 src 

    - name: mypy
      if: ${{ always() }}
      run: mypy src

    - name: pytest
      if: ${{always()}}
      run: pytest
