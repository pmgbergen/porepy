# Code Quality workflow for black, flake8, mypy

name: Build Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the main and develop branches
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches: 
      - develop
      - main
  schedule:
    # Do a nightly run of the tests
    - cron: '0 1 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
    strategy:
      matrix:
        python-version:  ["3.8", "3.9", "3.10"]  # TODO: Change 3.10.6 to 3.10 when mypy error is fixed
      # Complete all versions in matrix even if one fails.
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
    
    - name: Setup Python ${{ matrix.python-version}}
      uses: actions/setup-python@v3
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: ${{ matrix.python-version}}
        architecture: x64
        cache: 'pip'

    # Cache pip dependencies
    # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
    - name: Cache dependencies
      uses: actions/cache@v3
      id: cache
      with:
        # Cache the full python environment, this is more efficient than just caching pip
        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache mypy
      uses: actions/cache@v3
      id: cache-mypy
      with:
        path: mypy-cache-${{ matrix.python-version}}
        key: ${{ runner.os }}-mypy

    - name: Install external libraries
      run: |
        sudo apt-get install libglu1-mesa libgeos-dev
        export LD_LIBRARY_PATH=/usr/local/lib64/:$LD_LIBRARY_PATH

    - name: Install requirements
      run: |
        pip install -U pip
        # Install requirements, using eager updates to avoid stalled dependencies due to caching
        # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
        pip install --upgrade --upgrade-strategy eager -r requirements.txt

    - name: Install requirements-dev
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt        

    - name: Install PorePy
      run: |
        pip install .
        pip freeze       

    - name: black
      if: ${{ always() }}
      run: black --check src

    - name: isort
      if: ${{always()}}
      run: isort --check src

    - name: flake8
      if: ${{ always() }}
      run: flake8 src 

    - name: mypy
      if: ${{ always() }}
      run: mypy src --cache-dir mypy-cache-${{ matrix.python-version}}

    - name: unit tests
      if: ${{always()}}
      run: pytest tests/unit

    - name: integration tests
      if: ${{always()}}
      run: pytest tests/integration
